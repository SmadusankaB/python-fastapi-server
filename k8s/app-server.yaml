apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert
    kompose.version: 1.21.0 (992df58d8)
  labels:
    io.kompose.service: app-server
  name: app-server-pod
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app-server
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert
        kompose.version: 1.21.0 (992df58d8)
      labels:
        io.kompose.service: app-server
    spec:
      containers:
      - name: app-server
        image: app_server:0.0.1
        command:
          - /entrypoint.sh
          - /start.sh
        envFrom:
          - configMapRef:
              name: server-config-env
        env:
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: db-auth
                key: password
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-auth
                key: username
          - name: RABBITMQ_USER
            valueFrom:
              secretKeyRef:
                name: rabit-auth
                key: username
          - name: RABBITMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: rabit-auth
                key: password
        ports:
        - name: http
          containerPort: 8080
        imagePullPolicy: "IfNotPresent"
        volumeMounts:
        - mountPath: /app/uploads
          name: uploadfiles
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: uploadfiles
        persistentVolumeClaim:
          claimName: uploadfiles-pvc


---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: app-server
  name: app-server-service
  namespace: default
spec:
  selector:
    io.kompose.service: app-server
  ports:
  - port: 8080
    protocol: TCP
    targetPort: http
  type: ClusterIP
